 for v in V:
            if v[0] >= 360 - 100 and v[0] <= 360 - 65:     #우선적으로 좌측의 라이다 값을 받아온다  (260도~295도)          
                if v[1] >= 2300 and v[1] <= 3500:         #귀납적으로 첫번째 회전시 자동차와 벽장의 거리를 측정한뒤 그 거리에서만 회전할수 있게 값을 조정한다
                    on_drive.cmd = 33                     #벽쪽을 지날때 약 1000~1500 사이 값을 수집하다가 갑자기 2300~3500값이 뜰때 좌회전
                                                          #커맨드 33은 더 강하게 좌회전하는 명령
                    print("왼쪽으로 회전 ", v[1])          #디버깅을 위해 print문 작성
                    print("왼쪽 조향값 ", car.steering)
                    
                       
            elif v[0] >= 360 - 50 or v[0] <= 50:          #전방 100도 확인
 
                if v[0] <= 50 :                            #전방 우측 50도 우선 확인                                               
                    if v[1] <= 1150 :                     #전방 우측 50도 1.15m를 스캔후 물체가 있을경우
                        #Thread(target=car.alarm, args=(4, 8, 1/4)).start()
                        on_drive.cmd = 3                  #3번 커맨드를 통해 좌측으로 이동 
                        
                        

                    if v[1] > 1150 :                      #전방 우측 50도 1.15m 스캔후 물체가 없을경우
                        while(car.steering < 0) :         #왼쪽으로 치우쳐져 있는 조향값을 0으로 복원시키는 코드
                            on_drive.cmd = 4              #중앙을 넘어가지않도록 왼쪽에서 오른쪽 조향

                

                if v[0] >= 360 - 50 :                   #전방 좌측 50도 이후 확인 
                    if v[1] <= 1150 :                     #전방 좌측 50도 1.5m를 스캔후 물체가 있을경우
                        #Thread(target=car.alarm, args=(4, 8, 1/4)).start()
                        on_drive.cmd = 4                  #4번 커맨드를 통해 우측으로 이동 
                        
                        

                    if v[1] > 1150 :                      #전방 좌측 50도 1.5m 스캔후 물체가 없을경우
                        while(car.steering > 0) :         #오른쪽으로 치우쳐져 있는 조향값을 0으로 복원시키는 코드
                            on_drive.cmd = 3              #중앙을 넘어가지않도록 오른쪽에서 왼쪽 조향
                            
                            
                            
        time.sleep(0.1)                                   #조향값을 0.1초동안 유지
